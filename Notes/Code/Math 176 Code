Done through MATLAB

% UCI vs. UCLA
syms x

eqn1 = 2.1*x - 100;
eqn2 = 500/3 - (8*x)/3;

sol_x = double(solve(eqn1 == eqn2, x));

sol_y = double(subs(eqn1, x, sol_x));

figure;
fplot(eqn1, [-100, 100], 'r', 'LineWidth', 1.5); % Plot first equation
hold on;
fplot(eqn2, [-100, 100], 'b', 'LineWidth', 1.5); % Plot second equation
grid on;

xlim([0, 100]); % Adjust y-axis limits to reduce scaling
ylim([0, 150]); % Adjust y-axis limits to reduce scaling

plot(sol_x, sol_y, 'ko', 'MarkerSize', 10, 'MarkerFaceColor', 'k');

text(sol_x + 5, sol_y, '(x*, p*) = ($55.94, $17.47)', 'FontSize', 9, 'Color', 'k');

plot([sol_x sol_x], [0 sol_y], 'k--'); % Vertical line to x-axis
plot([0 sol_x], [sol_y sol_y], 'k--'); % Horizontal line to y-axis

xlabel('Amount to bet');
ylabel('Profit');
title('UCI vs. UCLA Bets');
legend('2.1x - 100', '500/3 - 8x/3');
hold off;


% Normal Distributions
x = linspace(-10, 10, 1000);

mu = [0, 2, -1, 0];
sigma = [1, 2, 4, 0.5];

y1 = normpdf(x, mu(1), sigma(1));
y2 = normpdf(x, mu(2), sigma(2));
y3 = normpdf(x, mu(3), sigma(3));
y4 = normpdf(x, mu(4), sigma(4));

figure;
hold on;
plot(x, y1, 'b', 'LineWidth', 2);
plot(x, y2, 'r', 'LineWidth', 2);
plot(x, y3, 'g', 'LineWidth', 2);
plot(x, y4, 'm', 'LineWidth', 2);
hold off;

% Add labels and legend
xlabel('Random variable z');
ylabel('Probability Density of z');
title('Different Normal Distributions');
legend('\mu = 0, \sigma = 1', '\mu = 2, \sigma = 2', '\mu = -1, \sigma = 4', '\mu = 0, \sigma = 0.5');
grid on;

x2 = linspace(-5, 15, 1000);
coinprob = normpdf(x2, 3.5, 35/12);
plot(x, coinprob, 'b', 'LineWidth', 2)
xlabel('Random variable z');
ylabel('Probability Density of z');
title(['PDF for one fair die']);
grid on;

x3 = linspace(-500, 2000, 10000);
coinprob2 = normpdf(x3, 700, 875/3);
plot(x3, coinprob2, 'r', 'LineWidth', 2)
xlabel('Random variable z');
ylabel('Probability Density of z');
title(['PDF for 100 fair dice']);
grid on;

%Taylor Series for sin(x) centered about pi
x_t = linspace(pi - 3.5, pi + 4.5, 1000); 

f_x = sin(x - pi);
F_x = (x - pi) - (1/6) * (x - pi).^3 + (1/120) * (x - pi).^5;

figure;
plot(x_t, f_x, 'b', 'LineWidth', 2);
hold on;
plot(x_t, F_x, 'r', 'LineWidth', 2); 
ylim([-2, 2])
xlim([0, 7])
hold off;

xlabel('x');
ylabel('y');
title('1D Taylor Series');
legend('f(x) = sin(x - \pi)', 'Taylor Series of f(x)');
grid on;

%2D Taylor Series for x^2 cos(y) 
[x, y] = meshgrid(linspace(-1, 3, 50), linspace(-pi, pi, 50));

f_xy = x.^2 .* cos(y);

F_xy = 1 + 2*(x - 1) + (x - 1).^2 - (1/2) * y.^2;

figure;
subplot(1,2,1);
surf(x, y, f_xy);
title('f(x, y) = x^2 cos(y)');
xlabel('x'); ylabel('y'); zlabel('f(x, y)');
colormap jet;
shading interp;

subplot(1,2,2);
surf(x, y, F_xy);
title('Taylor Approximation of f');
xlabel('x'); ylabel('y'); zlabel('f(x, y)');
colormap jet;
shading interp;


%Brownian Motion Distribution
dt = 0.01;  
N = 10000;  

dw = sqrt(dt) * randn(N, 1);

figure;
histogram(dw, 'Normalization', 'pdf', 'EdgeColor', 'none');
hold on;
x = linspace(min(dw), max(dw), 100);
pdf_dw = normpdf(x, 0, sqrt(dt));
plot(x, pdf_dw, 'b', 'LineWidth', 2);
hold off;
xlabel('dw');
ylabel('Probability Density');
title('P(dw)');
grid on;

dtdw = dt * dw;

figure;
histogram(dtdw, 'Normalization', 'pdf', 'EdgeColor', 'none');
hold on;
x = linspace(min(dtdw), max(dtdw), 100);
pdf_dtdw = normpdf(x, 0, dt^(3/2));
plot(x, pdf_dtdw, 'r', 'LineWidth', 2);
hold off;
xlabel('dt * dw');
ylabel('Probability Density');
title('P(dt \cdot dw)');
grid on;

dw2 = dw.^2;

figure;
histogram(dw2, 'Normalization', 'pdf', 'EdgeColor', 'none');
hold on;
x = linspace(0, max(dw2)*2, 0.25);
mu = dt;  % Expected value E[dw^2] = dt
sigma = sqrt(2 * dt^2); % VAR(dw^2) = 2(dt)^2
pdf_dw2 = gampdf(x, 1/2, 2*dt); % Chi-squared with 1 degree of freedom
plot(x, pdf_dw2, 'g', 'LineWidth', 2);
hold off;
xlabel('dw^2');
ylabel('Probability Density');
title('P(dw^2)');
grid on;

%Lognormal Distribution plot
S_t = 40;       
sigma = 0.2;    
T = 1;          
t = 0.5;        
mu = 0.16;      

tau = T - t;    
mu_adj = mu - 0.5 * sigma^2; 

mean_S = S_t * exp(mu_adj * tau + 0.5 * sigma^2 * tau);
median_S = S_t * exp(mu_adj * tau);
mode_S = S_t * exp(mu_adj * tau - sigma^2 * tau);

S = linspace(10, 100, 1000); 
lognormal_pdf = (1 ./ (S * sigma * sqrt(2 * pi * tau))) .* ...
                exp(-((log(S) - log(S_t) - mu_adj * tau).^2) / (2 * sigma^2 * tau));

figure;
plot(S, lognormal_pdf, 'b', 'LineWidth', 2);
hold on;

y_min = 0;  

plot([mean_S mean_S], [y_min, interp1(S, lognormal_pdf, mean_S)], 'r--', 'LineWidth', 1.5, 'DisplayName', 'Mean');
plot([median_S median_S], [y_min, interp1(S, lognormal_pdf, median_S)], 'g--', 'LineWidth', 1.5, 'DisplayName', 'Median');
plot([mode_S mode_S], [y_min, interp1(S, lognormal_pdf, mode_S)], 'm--', 'LineWidth', 1.5, 'DisplayName', 'Mode');

xlabel('S(T)');
ylabel('f(S(T))');
title('Lognormal Distribution of S(T)');
legend('Distribution', 'Mean', 'Median', 'Mode');
grid on;
hold off;

%Black-Scholes Put Euro vs American
E = 50;          
r = 0.05;        
sigma2 = 0.20;    
T2 = 5;           
S2 = linspace(0, 100, 100); 

d1 = (log(S2/E) + (r + 0.5 * sigma2^2) * T2) ./ (sigma2 * sqrt(T2));
d2 = d1 - sigma2 * sqrt(T2);
N_d1 = normcdf(-d1);
N_d2 = normcdf(-d2);
P_european = E * exp(-r * T2) .* N_d2 - S2 .* N_d1;

P_american = max(P_european, E - S2);  

figure;
hold on;
plot(S2, P_american, 'r', 'LineWidth', 2); 
plot(S2, P_european, 'k', 'LineWidth', 2); 
plot(S2, max(E - S2, 0), 'm--', 'LineWidth', 2); 

xlabel('Stock Price');
ylabel('Value of Option');
title('Black-Scholes 2D Plot');
legend('American Put Option Price', 'European Put Option Price', 'Intrinsic Value (E - S)', 'Location', 'NorthWest');
grid on;
hold off;

legend(["American Put Option Price", "European Put Option Price", "Intrinsic Value (E - S)"], "Location", "none", "Position", [0.2419 0.7640 0.3826, 0.1237])

d12 = (log(S2/E) + (r + 0.5 * sigma2^2) * T2) ./ (sigma2 * sqrt(T2));
d22 = d1 - sigma2 * sqrt(T2);
C2 = S2 .* normcdf(d12) - E * exp(-r * T2) * normcdf(d22); % European call price

intrinsic_value2 = max(S2 - E, 0);

figure;
hold on;
grid on;
plot(S2, C2, 'k', 'LineWidth', 2); % Black-Scholes Call Price
plot(S2, intrinsic_value2, 'm', 'LineWidth', 2); % Intrinsic Value

xlabel('Stock Price');
ylabel('Value of Option');
title('Black Scholes 2D Plot');
legend('American & European call option', 'Price = S - E', 'Location', 'NorthWest');

hold off;
